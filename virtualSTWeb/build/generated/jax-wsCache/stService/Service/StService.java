
package Service;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-2b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "stService", targetNamespace = "http://Service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StService {


    /**
     * 
     * @param stateName
     * @return
     *     returns java.util.List<Service.StateMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getState", targetNamespace = "http://Service/", className = "Service.GetState")
    @ResponseWrapper(localName = "getStateResponse", targetNamespace = "http://Service/", className = "Service.GetStateResponse")
    @Action(input = "http://Service/stService/getStateRequest", output = "http://Service/stService/getStateResponse")
    public List<StateMaster> getState(
        @WebParam(name = "state_name", targetNamespace = "")
        String stateName);

    /**
     * 
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addTransaction", targetNamespace = "http://Service/", className = "Service.AddTransaction")
    @Action(input = "http://Service/stService/addTransaction")
    public void addTransaction();

    /**
     * 
     * @param newPwd
     * @param uname
     * @param curPwd
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "changePassword", targetNamespace = "http://Service/", className = "Service.ChangePassword")
    @Action(input = "http://Service/stService/changePassword")
    public void changePassword(
        @WebParam(name = "uname", targetNamespace = "")
        String uname,
        @WebParam(name = "curPwd", targetNamespace = "")
        String curPwd,
        @WebParam(name = "newPwd", targetNamespace = "")
        String newPwd);

    /**
     * 
     * @param userId
     * @param password
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addUser", targetNamespace = "http://Service/", className = "Service.AddUser")
    @Action(input = "http://Service/stService/addUser")
    public void addUser(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param userId
     * @param password
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://Service/", className = "Service.UpdateUser")
    @Action(input = "http://Service/stService/updateUser")
    public void updateUser(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param fax
     * @param marketLot
     * @param listingDate
     * @param website
     * @param state
     * @param director
     * @param companyName
     * @param city
     * @param emailId
     * @param scriptCode
     * @param address
     * @param scriptId
     * @param faceValue
     * @param group
     * @param industry
     * @param phoneno
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addStock", targetNamespace = "http://Service/", className = "Service.AddStock")
    @Action(input = "http://Service/stService/addStock")
    public void addStock(
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId,
        @WebParam(name = "script_code", targetNamespace = "")
        String scriptCode,
        @WebParam(name = "group", targetNamespace = "")
        String group,
        @WebParam(name = "industry", targetNamespace = "")
        String industry,
        @WebParam(name = "market_lot", targetNamespace = "")
        Integer marketLot,
        @WebParam(name = "listing_date", targetNamespace = "")
        XMLGregorianCalendar listingDate,
        @WebParam(name = "face_value", targetNamespace = "")
        Integer faceValue,
        @WebParam(name = "company_name", targetNamespace = "")
        String companyName,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "state", targetNamespace = "")
        String state,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "phoneno", targetNamespace = "")
        String phoneno,
        @WebParam(name = "fax", targetNamespace = "")
        String fax,
        @WebParam(name = "email_id", targetNamespace = "")
        String emailId,
        @WebParam(name = "director", targetNamespace = "")
        String director,
        @WebParam(name = "website", targetNamespace = "")
        String website);

    /**
     * 
     * @param fax
     * @param marketLot
     * @param listingDate
     * @param website
     * @param state
     * @param director
     * @param companyName
     * @param city
     * @param emailId
     * @param scriptCode
     * @param address
     * @param scriptId
     * @param faceValue
     * @param group
     * @param industry
     * @param phoneno
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateStock", targetNamespace = "http://Service/", className = "Service.UpdateStock")
    @Action(input = "http://Service/stService/updateStock")
    public void updateStock(
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId,
        @WebParam(name = "script_code", targetNamespace = "")
        String scriptCode,
        @WebParam(name = "group", targetNamespace = "")
        String group,
        @WebParam(name = "industry", targetNamespace = "")
        String industry,
        @WebParam(name = "market_lot", targetNamespace = "")
        Integer marketLot,
        @WebParam(name = "listing_date", targetNamespace = "")
        XMLGregorianCalendar listingDate,
        @WebParam(name = "face_value", targetNamespace = "")
        Integer faceValue,
        @WebParam(name = "company_name", targetNamespace = "")
        String companyName,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "state", targetNamespace = "")
        String state,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "phoneno", targetNamespace = "")
        String phoneno,
        @WebParam(name = "fax", targetNamespace = "")
        String fax,
        @WebParam(name = "email_id", targetNamespace = "")
        String emailId,
        @WebParam(name = "director", targetNamespace = "")
        String director,
        @WebParam(name = "website", targetNamespace = "")
        String website);

    /**
     * 
     * @param scriptId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteStock", targetNamespace = "http://Service/", className = "Service.DeleteStock")
    @Action(input = "http://Service/stService/deleteStock")
    public void deleteStock(
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId);

    /**
     * 
     * @param scriptId
     * @return
     *     returns java.util.List<Service.StockDetails>
     */
    @WebMethod(operationName = "getStockDetails_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStockDetails_1", targetNamespace = "http://Service/", className = "Service.GetStockDetails1")
    @ResponseWrapper(localName = "getStockDetails_1Response", targetNamespace = "http://Service/", className = "Service.GetStockDetails1Response")
    @Action(input = "http://Service/stService/getStockDetails_1Request", output = "http://Service/stService/getStockDetails_1Response")
    public List<StockDetails> getStockDetails1(
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.StockDetails>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStockDetails", targetNamespace = "http://Service/", className = "Service.GetStockDetails")
    @ResponseWrapper(localName = "getStockDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetStockDetailsResponse")
    @Action(input = "http://Service/stService/getStockDetailsRequest", output = "http://Service/stService/getStockDetailsResponse")
    public List<StockDetails> getStockDetails();

    /**
     * 
     * @param phoneNo
     * @param sebIno
     * @param clearingNo
     * @param deposit
     * @param corporateEmail
     * @param correspondOffice
     * @param userId
     * @param state
     * @param tradeName
     * @param brokerName
     * @param city
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addBroker", targetNamespace = "http://Service/", className = "Service.AddBroker")
    @Action(input = "http://Service/stService/addBroker")
    public void addBroker(
        @WebParam(name = "broker_name", targetNamespace = "")
        String brokerName,
        @WebParam(name = "user_id", targetNamespace = "")
        String userId,
        @WebParam(name = "correspond_office", targetNamespace = "")
        String correspondOffice,
        @WebParam(name = "state", targetNamespace = "")
        String state,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "clearingNo", targetNamespace = "")
        String clearingNo,
        @WebParam(name = "trade_name", targetNamespace = "")
        String tradeName,
        @WebParam(name = "corporate_email", targetNamespace = "")
        String corporateEmail,
        @WebParam(name = "phone_no", targetNamespace = "")
        String phoneNo,
        @WebParam(name = "SEBIno", targetNamespace = "")
        String sebIno,
        @WebParam(name = "deposit", targetNamespace = "")
        Double deposit);

    /**
     * 
     * @param sebIno
     * @param clearingNo
     * @param deposit
     * @param state
     * @param tradeName
     * @param brokerId
     * @param city
     * @param phoneNo
     * @param corporateEmail
     * @param correspondOffice
     * @param userId
     * @param brokerName
     * @param fund
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateBroker", targetNamespace = "http://Service/", className = "Service.UpdateBroker")
    @Action(input = "http://Service/stService/updateBroker")
    public void updateBroker(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId,
        @WebParam(name = "broker_name", targetNamespace = "")
        String brokerName,
        @WebParam(name = "user_id", targetNamespace = "")
        String userId,
        @WebParam(name = "correspond_office", targetNamespace = "")
        String correspondOffice,
        @WebParam(name = "state", targetNamespace = "")
        String state,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "clearingNo", targetNamespace = "")
        String clearingNo,
        @WebParam(name = "trade_name", targetNamespace = "")
        String tradeName,
        @WebParam(name = "corporate_email", targetNamespace = "")
        String corporateEmail,
        @WebParam(name = "phone_no", targetNamespace = "")
        String phoneNo,
        @WebParam(name = "SEBIno", targetNamespace = "")
        String sebIno,
        @WebParam(name = "deposit", targetNamespace = "")
        Double deposit,
        @WebParam(name = "fund", targetNamespace = "")
        Double fund);

    /**
     * 
     * @param brokerId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteBroker", targetNamespace = "http://Service/", className = "Service.DeleteBroker")
    @Action(input = "http://Service/stService/deleteBroker")
    public void deleteBroker(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId);

    /**
     * 
     * @param fund
     * @param brokerId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addBrokerFund", targetNamespace = "http://Service/", className = "Service.AddBrokerFund")
    @Action(input = "http://Service/stService/addBrokerFund")
    public void addBrokerFund(
        @WebParam(name = "brokerId", targetNamespace = "")
        Long brokerId,
        @WebParam(name = "fund", targetNamespace = "")
        Double fund);

    /**
     * 
     * @return
     *     returns java.util.List<Service.BrokerMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBrokerDetails", targetNamespace = "http://Service/", className = "Service.GetBrokerDetails")
    @ResponseWrapper(localName = "getBrokerDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetBrokerDetailsResponse")
    @Action(input = "http://Service/stService/getBrokerDetailsRequest", output = "http://Service/stService/getBrokerDetailsResponse")
    public List<BrokerMaster> getBrokerDetails();

    /**
     * 
     * @param brokerId
     * @return
     *     returns java.util.List<Service.BrokerMaster>
     */
    @WebMethod(operationName = "getBrokerDetails_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBrokerDetails_1", targetNamespace = "http://Service/", className = "Service.GetBrokerDetails1")
    @ResponseWrapper(localName = "getBrokerDetails_1Response", targetNamespace = "http://Service/", className = "Service.GetBrokerDetails1Response")
    @Action(input = "http://Service/stService/getBrokerDetails_1Request", output = "http://Service/stService/getBrokerDetails_1Response")
    public List<BrokerMaster> getBrokerDetails1(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId);

    /**
     * 
     * @param brokerId
     * @return
     *     returns Service.BrokerMaster
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjBroker", targetNamespace = "http://Service/", className = "Service.GetObjBroker")
    @ResponseWrapper(localName = "getObjBrokerResponse", targetNamespace = "http://Service/", className = "Service.GetObjBrokerResponse")
    @Action(input = "http://Service/stService/getObjBrokerRequest", output = "http://Service/stService/getObjBrokerResponse")
    public BrokerMaster getObjBroker(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId);

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<Service.BrokerMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBrokerByUserId", targetNamespace = "http://Service/", className = "Service.GetBrokerByUserId")
    @ResponseWrapper(localName = "getBrokerByUserIdResponse", targetNamespace = "http://Service/", className = "Service.GetBrokerByUserIdResponse")
    @Action(input = "http://Service/stService/getBrokerByUserIdRequest", output = "http://Service/stService/getBrokerByUserIdResponse")
    public List<BrokerMaster> getBrokerByUserId(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @param topic
     * @param details
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addNews", targetNamespace = "http://Service/", className = "Service.AddNews")
    @Action(input = "http://Service/stService/addNews")
    public void addNews(
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "details", targetNamespace = "")
        String details);

    /**
     * 
     * @param topic
     * @param newsId
     * @param details
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateNews", targetNamespace = "http://Service/", className = "Service.UpdateNews")
    @Action(input = "http://Service/stService/updateNews")
    public void updateNews(
        @WebParam(name = "news_id", targetNamespace = "")
        Long newsId,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "details", targetNamespace = "")
        String details);

    /**
     * 
     * @param newsId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteNews", targetNamespace = "http://Service/", className = "Service.DeleteNews")
    @Action(input = "http://Service/stService/deleteNews")
    public void deleteNews(
        @WebParam(name = "news_id", targetNamespace = "")
        Long newsId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.NewsMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNewsDetails", targetNamespace = "http://Service/", className = "Service.GetNewsDetails")
    @ResponseWrapper(localName = "getNewsDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetNewsDetailsResponse")
    @Action(input = "http://Service/stService/getNewsDetailsRequest", output = "http://Service/stService/getNewsDetailsResponse")
    public List<NewsMaster> getNewsDetails();

    /**
     * 
     * @param newsId
     * @return
     *     returns java.util.List<Service.NewsMaster>
     */
    @WebMethod(operationName = "getNewsDetails_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNewsDetails_1", targetNamespace = "http://Service/", className = "Service.GetNewsDetails1")
    @ResponseWrapper(localName = "getNewsDetails_1Response", targetNamespace = "http://Service/", className = "Service.GetNewsDetails1Response")
    @Action(input = "http://Service/stService/getNewsDetails_1Request", output = "http://Service/stService/getNewsDetails_1Response")
    public List<NewsMaster> getNewsDetails1(
        @WebParam(name = "newsId", targetNamespace = "")
        Long newsId);

    /**
     * 
     * @param price
     * @param orderType
     * @param traderId
     * @param orderDate
     * @param pending
     * @param volume
     * @param scriptId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addOrder", targetNamespace = "http://Service/", className = "Service.AddOrder")
    @Action(input = "http://Service/stService/addOrder")
    public void addOrder(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId,
        @WebParam(name = "volume", targetNamespace = "")
        Long volume,
        @WebParam(name = "price", targetNamespace = "")
        Double price,
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId,
        @WebParam(name = "order_date", targetNamespace = "")
        XMLGregorianCalendar orderDate,
        @WebParam(name = "order_type", targetNamespace = "")
        String orderType,
        @WebParam(name = "pending", targetNamespace = "")
        String pending);

    /**
     * 
     * @param price
     * @param orderType
     * @param traderId
     * @param orderDate
     * @param pending
     * @param volume
     * @param scriptId
     * @param orderId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateOrder", targetNamespace = "http://Service/", className = "Service.UpdateOrder")
    @Action(input = "http://Service/stService/updateOrder")
    public void updateOrder(
        @WebParam(name = "order_id", targetNamespace = "")
        Double orderId,
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId,
        @WebParam(name = "volume", targetNamespace = "")
        Long volume,
        @WebParam(name = "price", targetNamespace = "")
        Double price,
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId,
        @WebParam(name = "order_date", targetNamespace = "")
        XMLGregorianCalendar orderDate,
        @WebParam(name = "order_type", targetNamespace = "")
        String orderType,
        @WebParam(name = "pending", targetNamespace = "")
        String pending);

    /**
     * 
     * @param orderId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteOrder", targetNamespace = "http://Service/", className = "Service.DeleteOrder")
    @Action(input = "http://Service/stService/deleteOrder")
    public void deleteOrder(
        @WebParam(name = "order_id", targetNamespace = "")
        Double orderId);

    /**
     * 
     * @param orderDateFrom
     * @param orderType
     * @param traderId
     * @param orderDateTo
     * @param scriptId
     * @return
     *     returns java.util.List<Service.OrderMaster>
     */
    @WebMethod(operationName = "getPendingOrder_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPendingOrder_1", targetNamespace = "http://Service/", className = "Service.GetPendingOrder1")
    @ResponseWrapper(localName = "getPendingOrder_1Response", targetNamespace = "http://Service/", className = "Service.GetPendingOrder1Response")
    @Action(input = "http://Service/stService/getPendingOrder_1Request", output = "http://Service/stService/getPendingOrder_1Response")
    public List<OrderMaster> getPendingOrder1(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId,
        @WebParam(name = "order_type", targetNamespace = "")
        String orderType,
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId,
        @WebParam(name = "order_date_from", targetNamespace = "")
        XMLGregorianCalendar orderDateFrom,
        @WebParam(name = "order_date_to", targetNamespace = "")
        XMLGregorianCalendar orderDateTo);

    /**
     * 
     * @return
     *     returns java.util.List<Service.OrderMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPendingOrder", targetNamespace = "http://Service/", className = "Service.GetPendingOrder")
    @ResponseWrapper(localName = "getPendingOrderResponse", targetNamespace = "http://Service/", className = "Service.GetPendingOrderResponse")
    @Action(input = "http://Service/stService/getPendingOrderRequest", output = "http://Service/stService/getPendingOrderResponse")
    public List<OrderMaster> getPendingOrder();

    /**
     * 
     * @param emailId
     * @param paNno
     * @param address
     * @param userId
     * @param state
     * @param traderName
     * @param brokerId
     * @param phoneno
     * @param city
     * @param deposite
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addTrader", targetNamespace = "http://Service/", className = "Service.AddTrader")
    @Action(input = "http://Service/stService/addTrader")
    public void addTrader(
        @WebParam(name = "trader_name", targetNamespace = "")
        String traderName,
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId,
        @WebParam(name = "user_id", targetNamespace = "")
        String userId,
        @WebParam(name = "deposite", targetNamespace = "")
        Double deposite,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "state", targetNamespace = "")
        String state,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "PANno", targetNamespace = "")
        String paNno,
        @WebParam(name = "phoneno", targetNamespace = "")
        String phoneno,
        @WebParam(name = "email_id", targetNamespace = "")
        String emailId);

    /**
     * 
     * @param adminId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteAdmin", targetNamespace = "http://Service/", className = "Service.DeleteAdmin")
    @Action(input = "http://Service/stService/deleteAdmin")
    public void deleteAdmin(
        @WebParam(name = "adminId", targetNamespace = "")
        Integer adminId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.AdminMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAdminDetails", targetNamespace = "http://Service/", className = "Service.GetAdminDetails")
    @ResponseWrapper(localName = "getAdminDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetAdminDetailsResponse")
    @Action(input = "http://Service/stService/getAdminDetailsRequest", output = "http://Service/stService/getAdminDetailsResponse")
    public List<AdminMaster> getAdminDetails();

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<Service.AdminMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAdminByUserId", targetNamespace = "http://Service/", className = "Service.GetAdminByUserId")
    @ResponseWrapper(localName = "getAdminByUserIdResponse", targetNamespace = "http://Service/", className = "Service.GetAdminByUserIdResponse")
    @Action(input = "http://Service/stService/getAdminByUserIdRequest", output = "http://Service/stService/getAdminByUserIdResponse")
    public List<AdminMaster> getAdminByUserId(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @param userId
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkUserAvability", targetNamespace = "http://Service/", className = "Service.CheckUserAvability")
    @ResponseWrapper(localName = "checkUserAvabilityResponse", targetNamespace = "http://Service/", className = "Service.CheckUserAvabilityResponse")
    @Action(input = "http://Service/stService/checkUserAvabilityRequest", output = "http://Service/stService/checkUserAvabilityResponse")
    public boolean checkUserAvability(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @param stockSymbol
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQuotes", targetNamespace = "http://Service/", className = "Service.GetQuotes")
    @ResponseWrapper(localName = "getQuotesResponse", targetNamespace = "http://Service/", className = "Service.GetQuotesResponse")
    @Action(input = "http://Service/stService/getQuotesRequest", output = "http://Service/stService/getQuotesResponse")
    public List<Object> getQuotes(
        @WebParam(name = "Stock_Symbol", targetNamespace = "")
        String stockSymbol);

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<Service.TraderStock>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTraddersStock", targetNamespace = "http://Service/", className = "Service.GetTraddersStock")
    @ResponseWrapper(localName = "getTraddersStockResponse", targetNamespace = "http://Service/", className = "Service.GetTraddersStockResponse")
    @Action(input = "http://Service/stService/getTraddersStockRequest", output = "http://Service/stService/getTraddersStockResponse")
    public List<TraderStock> getTraddersStock(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.TraderStock>
     */
    @WebMethod(operationName = "getTraddersStock_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTraddersStock_1", targetNamespace = "http://Service/", className = "Service.GetTraddersStock1")
    @ResponseWrapper(localName = "getTraddersStock_1Response", targetNamespace = "http://Service/", className = "Service.GetTraddersStock1Response")
    @Action(input = "http://Service/stService/getTraddersStock_1Request", output = "http://Service/stService/getTraddersStock_1Response")
    public List<TraderStock> getTraddersStock1();

    /**
     * 
     * @param traderId
     * @param scriptId
     * @return
     *     returns Service.TraderStock
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjTraddersStock", targetNamespace = "http://Service/", className = "Service.GetObjTraddersStock")
    @ResponseWrapper(localName = "getObjTraddersStockResponse", targetNamespace = "http://Service/", className = "Service.GetObjTraddersStockResponse")
    @Action(input = "http://Service/stService/getObjTraddersStockRequest", output = "http://Service/stService/getObjTraddersStockResponse")
    public TraderStock getObjTraddersStock(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId,
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.StateMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllStates", targetNamespace = "http://Service/", className = "Service.GetAllStates")
    @ResponseWrapper(localName = "getAllStatesResponse", targetNamespace = "http://Service/", className = "Service.GetAllStatesResponse")
    @Action(input = "http://Service/stService/getAllStatesRequest", output = "http://Service/stService/getAllStatesResponse")
    public List<StateMaster> getAllStates();

    /**
     * 
     * @param stateId
     * @return
     *     returns java.util.List<Service.CityMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCityByState", targetNamespace = "http://Service/", className = "Service.GetCityByState")
    @ResponseWrapper(localName = "getCityByStateResponse", targetNamespace = "http://Service/", className = "Service.GetCityByStateResponse")
    @Action(input = "http://Service/stService/getCityByStateRequest", output = "http://Service/stService/getCityByStateResponse")
    public List<CityMaster> getCityByState(
        @WebParam(name = "stateId", targetNamespace = "")
        Integer stateId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.CityMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCity", targetNamespace = "http://Service/", className = "Service.GetAllCity")
    @ResponseWrapper(localName = "getAllCityResponse", targetNamespace = "http://Service/", className = "Service.GetAllCityResponse")
    @Action(input = "http://Service/stService/getAllCityRequest", output = "http://Service/stService/getAllCityResponse")
    public List<CityMaster> getAllCity();

    /**
     * 
     * @param stateId
     * @return
     *     returns Service.StateMaster
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjState", targetNamespace = "http://Service/", className = "Service.GetObjState")
    @ResponseWrapper(localName = "getObjStateResponse", targetNamespace = "http://Service/", className = "Service.GetObjStateResponse")
    @Action(input = "http://Service/stService/getObjStateRequest", output = "http://Service/stService/getObjStateResponse")
    public StateMaster getObjState(
        @WebParam(name = "state_id", targetNamespace = "")
        Integer stateId);

    /**
     * 
     * @param stockSymbol
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAuto", targetNamespace = "http://Service/", className = "Service.GetAuto")
    @ResponseWrapper(localName = "getAutoResponse", targetNamespace = "http://Service/", className = "Service.GetAutoResponse")
    @Action(input = "http://Service/stService/getAutoRequest", output = "http://Service/stService/getAutoResponse")
    public List<Object> getAuto(
        @WebParam(name = "Stock_Symbol", targetNamespace = "")
        String stockSymbol);

    /**
     * 
     * @param sub
     * @param receiver
     * @param msg
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "sendMail", targetNamespace = "http://Service/", className = "Service.SendMail")
    @Action(input = "http://Service/stService/sendMail")
    public void sendMail(
        @WebParam(name = "Receiver", targetNamespace = "")
        String receiver,
        @WebParam(name = "Sub", targetNamespace = "")
        String sub,
        @WebParam(name = "Msg", targetNamespace = "")
        String msg);

    /**
     * 
     * @param phone
     * @param msg
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "sendSms", targetNamespace = "http://Service/", className = "Service.SendSms")
    @Action(input = "http://Service/stService/sendSms")
    public void sendSms(
        @WebParam(name = "phone", targetNamespace = "")
        Object phone,
        @WebParam(name = "msg", targetNamespace = "")
        String msg);

    /**
     * 
     * @param phoneNo
     * @param emailId
     * @param guestName
     * @param pin
     * @param address
     * @param pending
     * @param brokerId
     * @param stat
     * @param pan
     * @param city
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "registrationTrader", targetNamespace = "http://Service/", className = "Service.RegistrationTrader")
    @Action(input = "http://Service/stService/registrationTrader")
    public void registrationTrader(
        @WebParam(name = "guestName", targetNamespace = "")
        String guestName,
        @WebParam(name = "emailId", targetNamespace = "")
        String emailId,
        @WebParam(name = "phoneNo", targetNamespace = "")
        String phoneNo,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "stat", targetNamespace = "")
        String stat,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "pin", targetNamespace = "")
        String pin,
        @WebParam(name = "pan", targetNamespace = "")
        String pan,
        @WebParam(name = "brokerId", targetNamespace = "")
        Long brokerId,
        @WebParam(name = "pending", targetNamespace = "")
        String pending);

    /**
     * 
     * @return
     *     returns java.util.List<Service.RegistrationMst>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRegistrationDetails", targetNamespace = "http://Service/", className = "Service.GetRegistrationDetails")
    @ResponseWrapper(localName = "getRegistrationDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetRegistrationDetailsResponse")
    @Action(input = "http://Service/stService/getRegistrationDetailsRequest", output = "http://Service/stService/getRegistrationDetailsResponse")
    public List<RegistrationMst> getRegistrationDetails();

    /**
     * 
     * @param guestId
     * @return
     *     returns Service.RegistrationMst
     */
    @WebMethod(operationName = "getRegistrationDetails_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRegistrationDetails_1", targetNamespace = "http://Service/", className = "Service.GetRegistrationDetails1")
    @ResponseWrapper(localName = "getRegistrationDetails_1Response", targetNamespace = "http://Service/", className = "Service.GetRegistrationDetails1Response")
    @Action(input = "http://Service/stService/getRegistrationDetails_1Request", output = "http://Service/stService/getRegistrationDetails_1Response")
    public RegistrationMst getRegistrationDetails1(
        @WebParam(name = "guestId", targetNamespace = "")
        Integer guestId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.RegistrationMst>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPendingRegistation", targetNamespace = "http://Service/", className = "Service.GetPendingRegistation")
    @ResponseWrapper(localName = "getPendingRegistationResponse", targetNamespace = "http://Service/", className = "Service.GetPendingRegistationResponse")
    @Action(input = "http://Service/stService/getPendingRegistationRequest", output = "http://Service/stService/getPendingRegistationResponse")
    public List<RegistrationMst> getPendingRegistation();

    /**
     * 
     * @param phoneNo
     * @param emailId
     * @param guestName
     * @param address
     * @param pending
     * @param guestId
     * @param brokerId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateRegistration", targetNamespace = "http://Service/", className = "Service.UpdateRegistration")
    @Action(input = "http://Service/stService/updateRegistration")
    public void updateRegistration(
        @WebParam(name = "guestId", targetNamespace = "")
        Integer guestId,
        @WebParam(name = "guestName", targetNamespace = "")
        String guestName,
        @WebParam(name = "emailId", targetNamespace = "")
        String emailId,
        @WebParam(name = "phoneNo", targetNamespace = "")
        String phoneNo,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "brokerId", targetNamespace = "")
        Long brokerId,
        @WebParam(name = "pending", targetNamespace = "")
        String pending);

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMonthAll", targetNamespace = "http://Service/", className = "Service.GetMonthAll")
    @ResponseWrapper(localName = "getMonthAllResponse", targetNamespace = "http://Service/", className = "Service.GetMonthAllResponse")
    @Action(input = "http://Service/stService/getMonthAllRequest", output = "http://Service/stService/getMonthAllResponse")
    public List<Object> getMonthAll(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<Service.OrderMaster>
     */
    @WebMethod(operationName = "getOrderDetails_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrderDetails_1", targetNamespace = "http://Service/", className = "Service.GetOrderDetails1")
    @ResponseWrapper(localName = "getOrderDetails_1Response", targetNamespace = "http://Service/", className = "Service.GetOrderDetails1Response")
    @Action(input = "http://Service/stService/getOrderDetails_1Request", output = "http://Service/stService/getOrderDetails_1Response")
    public List<OrderMaster> getOrderDetails1(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.OrderMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrderDetails", targetNamespace = "http://Service/", className = "Service.GetOrderDetails")
    @ResponseWrapper(localName = "getOrderDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetOrderDetailsResponse")
    @Action(input = "http://Service/stService/getOrderDetailsRequest", output = "http://Service/stService/getOrderDetailsResponse")
    public List<OrderMaster> getOrderDetails();

    /**
     * 
     * @param orderId
     * @return
     *     returns Service.OrderMaster
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjOrderDetails", targetNamespace = "http://Service/", className = "Service.GetObjOrderDetails")
    @ResponseWrapper(localName = "getObjOrderDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetObjOrderDetailsResponse")
    @Action(input = "http://Service/stService/getObjOrderDetailsRequest", output = "http://Service/stService/getObjOrderDetailsResponse")
    public OrderMaster getObjOrderDetails(
        @WebParam(name = "order_id", targetNamespace = "")
        Double orderId);

    /**
     * 
     * @param emailId
     * @param paNno
     * @param address
     * @param traderId
     * @param userId
     * @param state
     * @param fund
     * @param traderName
     * @param brokerId
     * @param phoneno
     * @param city
     * @param deposite
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateTrader", targetNamespace = "http://Service/", className = "Service.UpdateTrader")
    @Action(input = "http://Service/stService/updateTrader")
    public void updateTrader(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId,
        @WebParam(name = "trader_name", targetNamespace = "")
        String traderName,
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId,
        @WebParam(name = "user_id", targetNamespace = "")
        String userId,
        @WebParam(name = "deposite", targetNamespace = "")
        Double deposite,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "state", targetNamespace = "")
        String state,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "PANno", targetNamespace = "")
        String paNno,
        @WebParam(name = "phoneno", targetNamespace = "")
        String phoneno,
        @WebParam(name = "email_id", targetNamespace = "")
        String emailId,
        @WebParam(name = "fund", targetNamespace = "")
        Double fund);

    /**
     * 
     * @param traderId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteTrader", targetNamespace = "http://Service/", className = "Service.DeleteTrader")
    @Action(input = "http://Service/stService/deleteTrader")
    public void deleteTrader(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @param traderId
     * @param fund
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addTraderFund", targetNamespace = "http://Service/", className = "Service.AddTraderFund")
    @Action(input = "http://Service/stService/addTraderFund")
    public void addTraderFund(
        @WebParam(name = "traderId", targetNamespace = "")
        Double traderId,
        @WebParam(name = "fund", targetNamespace = "")
        Double fund);

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<Service.TraderMaster>
     */
    @WebMethod(operationName = "getTraderDetails_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTraderDetails_1", targetNamespace = "http://Service/", className = "Service.GetTraderDetails1")
    @ResponseWrapper(localName = "getTraderDetails_1Response", targetNamespace = "http://Service/", className = "Service.GetTraderDetails1Response")
    @Action(input = "http://Service/stService/getTraderDetails_1Request", output = "http://Service/stService/getTraderDetails_1Response")
    public List<TraderMaster> getTraderDetails1(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.TraderMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTraderDetails", targetNamespace = "http://Service/", className = "Service.GetTraderDetails")
    @ResponseWrapper(localName = "getTraderDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetTraderDetailsResponse")
    @Action(input = "http://Service/stService/getTraderDetailsRequest", output = "http://Service/stService/getTraderDetailsResponse")
    public List<TraderMaster> getTraderDetails();

    /**
     * 
     * @param brokerId
     * @return
     *     returns java.util.List<Service.TraderMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTraderDetailsByBrocker", targetNamespace = "http://Service/", className = "Service.GetTraderDetailsByBrocker")
    @ResponseWrapper(localName = "getTraderDetailsByBrockerResponse", targetNamespace = "http://Service/", className = "Service.GetTraderDetailsByBrockerResponse")
    @Action(input = "http://Service/stService/getTraderDetailsByBrockerRequest", output = "http://Service/stService/getTraderDetailsByBrockerResponse")
    public List<TraderMaster> getTraderDetailsByBrocker(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId);

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<Service.TraderMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTraderByUserId", targetNamespace = "http://Service/", className = "Service.GetTraderByUserId")
    @ResponseWrapper(localName = "getTraderByUserIdResponse", targetNamespace = "http://Service/", className = "Service.GetTraderByUserIdResponse")
    @Action(input = "http://Service/stService/getTraderByUserIdRequest", output = "http://Service/stService/getTraderByUserIdResponse")
    public List<TraderMaster> getTraderByUserId(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @param brokerId
     * @return
     *     returns java.util.List<Service.TraderMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTraderByBrokerId", targetNamespace = "http://Service/", className = "Service.GetTraderByBrokerId")
    @ResponseWrapper(localName = "getTraderByBrokerIdResponse", targetNamespace = "http://Service/", className = "Service.GetTraderByBrokerIdResponse")
    @Action(input = "http://Service/stService/getTraderByBrokerIdRequest", output = "http://Service/stService/getTraderByBrokerIdResponse")
    public List<TraderMaster> getTraderByBrokerId(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId);

    /**
     * 
     * @param traderId
     * @return
     *     returns Service.TraderMaster
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjTrader", targetNamespace = "http://Service/", className = "Service.GetObjTrader")
    @ResponseWrapper(localName = "getObjTraderResponse", targetNamespace = "http://Service/", className = "Service.GetObjTraderResponse")
    @Action(input = "http://Service/stService/getObjTraderRequest", output = "http://Service/stService/getObjTraderResponse")
    public TraderMaster getObjTrader(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @param orderDateFrom
     * @param orderType
     * @param traderId
     * @param orderDateTo
     * @param scriptId
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod(operationName = "getTransactionDetails_3")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionDetails_3", targetNamespace = "http://Service/", className = "Service.GetTransactionDetails3")
    @ResponseWrapper(localName = "getTransactionDetails_3Response", targetNamespace = "http://Service/", className = "Service.GetTransactionDetails3Response")
    @Action(input = "http://Service/stService/getTransactionDetails_3Request", output = "http://Service/stService/getTransactionDetails_3Response")
    public List<TransactionDetails> getTransactionDetails3(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId,
        @WebParam(name = "order_type", targetNamespace = "")
        String orderType,
        @WebParam(name = "script_id", targetNamespace = "")
        String scriptId,
        @WebParam(name = "order_date_from", targetNamespace = "")
        XMLGregorianCalendar orderDateFrom,
        @WebParam(name = "order_date_to", targetNamespace = "")
        XMLGregorianCalendar orderDateTo);

    /**
     * 
     * @param brokerId
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod(operationName = "getTransactionDetails_2")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionDetails_2", targetNamespace = "http://Service/", className = "Service.GetTransactionDetails2")
    @ResponseWrapper(localName = "getTransactionDetails_2Response", targetNamespace = "http://Service/", className = "Service.GetTransactionDetails2Response")
    @Action(input = "http://Service/stService/getTransactionDetails_2Request", output = "http://Service/stService/getTransactionDetails_2Response")
    public List<TransactionDetails> getTransactionDetails2(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId);

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod(operationName = "getTransactionDetails_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionDetails_1", targetNamespace = "http://Service/", className = "Service.GetTransactionDetails1")
    @ResponseWrapper(localName = "getTransactionDetails_1Response", targetNamespace = "http://Service/", className = "Service.GetTransactionDetails1Response")
    @Action(input = "http://Service/stService/getTransactionDetails_1Request", output = "http://Service/stService/getTransactionDetails_1Response")
    public List<TransactionDetails> getTransactionDetails1(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionDetails", targetNamespace = "http://Service/", className = "Service.GetTransactionDetails")
    @ResponseWrapper(localName = "getTransactionDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetTransactionDetailsResponse")
    @Action(input = "http://Service/stService/getTransactionDetailsRequest", output = "http://Service/stService/getTransactionDetailsResponse")
    public List<TransactionDetails> getTransactionDetails();

    /**
     * 
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod(operationName = "getTransactionSell_2")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionSell_2", targetNamespace = "http://Service/", className = "Service.GetTransactionSell2")
    @ResponseWrapper(localName = "getTransactionSell_2Response", targetNamespace = "http://Service/", className = "Service.GetTransactionSell2Response")
    @Action(input = "http://Service/stService/getTransactionSell_2Request", output = "http://Service/stService/getTransactionSell_2Response")
    public List<TransactionDetails> getTransactionSell2();

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod(operationName = "getTransactionSell_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionSell_1", targetNamespace = "http://Service/", className = "Service.GetTransactionSell1")
    @ResponseWrapper(localName = "getTransactionSell_1Response", targetNamespace = "http://Service/", className = "Service.GetTransactionSell1Response")
    @Action(input = "http://Service/stService/getTransactionSell_1Request", output = "http://Service/stService/getTransactionSell_1Response")
    public List<TransactionDetails> getTransactionSell1(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @param brokerId
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionSell", targetNamespace = "http://Service/", className = "Service.GetTransactionSell")
    @ResponseWrapper(localName = "getTransactionSellResponse", targetNamespace = "http://Service/", className = "Service.GetTransactionSellResponse")
    @Action(input = "http://Service/stService/getTransactionSellRequest", output = "http://Service/stService/getTransactionSellResponse")
    public List<TransactionDetails> getTransactionSell(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod(operationName = "getTransactionBuy_2")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionBuy_2", targetNamespace = "http://Service/", className = "Service.GetTransactionBuy2")
    @ResponseWrapper(localName = "getTransactionBuy_2Response", targetNamespace = "http://Service/", className = "Service.GetTransactionBuy2Response")
    @Action(input = "http://Service/stService/getTransactionBuy_2Request", output = "http://Service/stService/getTransactionBuy_2Response")
    public List<TransactionDetails> getTransactionBuy2();

    /**
     * 
     * @param brokerId
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionBuy", targetNamespace = "http://Service/", className = "Service.GetTransactionBuy")
    @ResponseWrapper(localName = "getTransactionBuyResponse", targetNamespace = "http://Service/", className = "Service.GetTransactionBuyResponse")
    @Action(input = "http://Service/stService/getTransactionBuyRequest", output = "http://Service/stService/getTransactionBuyResponse")
    public List<TransactionDetails> getTransactionBuy(
        @WebParam(name = "broker_id", targetNamespace = "")
        Long brokerId);

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod(operationName = "getTransactionBuy_1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionBuy_1", targetNamespace = "http://Service/", className = "Service.GetTransactionBuy1")
    @ResponseWrapper(localName = "getTransactionBuy_1Response", targetNamespace = "http://Service/", className = "Service.GetTransactionBuy1Response")
    @Action(input = "http://Service/stService/getTransactionBuy_1Request", output = "http://Service/stService/getTransactionBuy_1Response")
    public List<TransactionDetails> getTransactionBuy1(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.TransactionDetails>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionOfMonth", targetNamespace = "http://Service/", className = "Service.GetTransactionOfMonth")
    @ResponseWrapper(localName = "getTransactionOfMonthResponse", targetNamespace = "http://Service/", className = "Service.GetTransactionOfMonthResponse")
    @Action(input = "http://Service/stService/getTransactionOfMonthRequest", output = "http://Service/stService/getTransactionOfMonthResponse")
    public List<TransactionDetails> getTransactionOfMonth();

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<Service.StringArray>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMonthWiseTotal", targetNamespace = "http://Service/", className = "Service.GetMonthWiseTotal")
    @ResponseWrapper(localName = "getMonthWiseTotalResponse", targetNamespace = "http://Service/", className = "Service.GetMonthWiseTotalResponse")
    @Action(input = "http://Service/stService/getMonthWiseTotalRequest", output = "http://Service/stService/getMonthWiseTotalResponse")
    public List<StringArray> getMonthWiseTotal(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @param traderId
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMonthWiseMonth", targetNamespace = "http://Service/", className = "Service.GetMonthWiseMonth")
    @ResponseWrapper(localName = "getMonthWiseMonthResponse", targetNamespace = "http://Service/", className = "Service.GetMonthWiseMonthResponse")
    @Action(input = "http://Service/stService/getMonthWiseMonthRequest", output = "http://Service/stService/getMonthWiseMonthResponse")
    public List<Object> getMonthWiseMonth(
        @WebParam(name = "trader_id", targetNamespace = "")
        Double traderId);

    /**
     * 
     * @param userId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://Service/", className = "Service.DeleteUser")
    @Action(input = "http://Service/stService/deleteUser")
    public void deleteUser(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @return
     *     returns java.util.List<Service.UserMaster>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserMasterDetails", targetNamespace = "http://Service/", className = "Service.GetUserMasterDetails")
    @ResponseWrapper(localName = "getUserMasterDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetUserMasterDetailsResponse")
    @Action(input = "http://Service/stService/getUserMasterDetailsRequest", output = "http://Service/stService/getUserMasterDetailsResponse")
    public List<UserMaster> getUserMasterDetails();

    /**
     * 
     * @param userId
     * @return
     *     returns Service.UserMaster
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjUserDetails", targetNamespace = "http://Service/", className = "Service.GetObjUserDetails")
    @ResponseWrapper(localName = "getObjUserDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetObjUserDetailsResponse")
    @Action(input = "http://Service/stService/getObjUserDetailsRequest", output = "http://Service/stService/getObjUserDetailsResponse")
    public UserMaster getObjUserDetails(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @param userId
     * @param group
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteUserGroup", targetNamespace = "http://Service/", className = "Service.DeleteUserGroup")
    @Action(input = "http://Service/stService/deleteUserGroup")
    public void deleteUserGroup(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId,
        @WebParam(name = "group", targetNamespace = "")
        String group);

    /**
     * 
     * @param groupType
     * @param userId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addUserSGroup", targetNamespace = "http://Service/", className = "Service.AddUserSGroup")
    @Action(input = "http://Service/stService/addUserSGroup")
    public void addUserSGroup(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId,
        @WebParam(name = "group_type", targetNamespace = "")
        String groupType);

    /**
     * 
     * @return
     *     returns java.util.List<Service.UserGroup>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserGroupDetails", targetNamespace = "http://Service/", className = "Service.GetUserGroupDetails")
    @ResponseWrapper(localName = "getUserGroupDetailsResponse", targetNamespace = "http://Service/", className = "Service.GetUserGroupDetailsResponse")
    @Action(input = "http://Service/stService/getUserGroupDetailsRequest", output = "http://Service/stService/getUserGroupDetailsResponse")
    public List<UserGroup> getUserGroupDetails();

    /**
     * 
     * @param phoneNo
     * @param emailId
     * @param details
     * @param userId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addAdmin", targetNamespace = "http://Service/", className = "Service.AddAdmin")
    @Action(input = "http://Service/stService/addAdmin")
    public void addAdmin(
        @WebParam(name = "userId", targetNamespace = "")
        String userId,
        @WebParam(name = "emailId", targetNamespace = "")
        String emailId,
        @WebParam(name = "phoneNo", targetNamespace = "")
        String phoneNo,
        @WebParam(name = "details", targetNamespace = "")
        String details);

}
